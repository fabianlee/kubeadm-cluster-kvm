---
ansible_python_interpreter: /usr/bin/python3
ansible_user: ubuntu
# configure these users with proper: group, permissions, ~/.kube/config
users: ['ubuntu'] # 'ubuntu' for kvm/libvirt

# major.minor version for apt install of utilities
kubeadm_version: "1.28" # needs to be string for comparisons later (not float)
k8s_implementation: kubeadm
# 1.23 can still work with dockershim, but 1.24 requires containerd
use_containerd: true

# internal CIDR block ranges for pods and clusters
pod_cidr: 10.245.0.0/16 # flannel default is 10.244.0.0/16
service_cidr: 10.249.0.0/16

# IP adress of 'control1' the kubeadm master
master_ip: "{{ hostvars[groups['control_plane'][0]]['ansible_host'] | default(groups['control_plane'][0]) }}"

# last octet of IP address that MetalLB will allocate on bridged host network 
metal_lb_octet: 145

# by default, node DNS settings are used (including any search domains)
# this can override the settings used by kubelet and therefore CoreDNS
kubelet_use_custom_dns: true
kubelet_dns: 192.168.122.1

# for SAN certificate with custom CA
cert_CA: myCA.local
cert_domains_primary_ingress: ['kubeadm.local','kubeadm-alt.local','grafana.kubeadm.local','prometheus.kubeadm.local','alertmanager.kubeadm.local','mailhog.kubedm.local','oauthproxy.kubeadm.local','keycloak.kubeadm.local']

# prometheus monitoring put at subdomain by default ('context' is other choice)
prometheus_ingress_at: subdomain

# cluster nodes must see each other
kvm_default_network: 192.168.122
local_etc_hosts:
  - ip: "{{kvm_default_network}}.217"
    fqdn: control1
  - ip: "{{kvm_default_network}}.218"
    fqdn: worker1
  - ip: "{{kvm_default_network}}.219"
    fqdn: worker2
