# https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
---

- set_fact:
    master_ip_internal: "{{ansible_ens3.ipv4.address}}"
- debug: msg="{{master_ip_internal}}"

- name: retrieve mailhog ClusterIP
  #become_user: ubuntu
  command:
    cmd: kubectl get services -n email mailhog -o=jsonpath="{.spec.clusterIP}"
  register: mailhog_cluster_ip
- name: retrieve mailhog SMTP port
  #become_user: ubuntu
  command:
    cmd: kubectl get services -n email mailhog -o=jsonpath="{.spec.ports[?(@.name=='tcp-smtp')].port}"
  register: mailhog_smtp_port

- set_fact:
    smtp_host_port: "{{mailhog_cluster_ip.stdout}}:{{mailhog_smtp_port.stdout}}"
- debug: msg="{{smtp_host_port}}"

- template:
    src: prom-sparse.yaml
    dest: /tmp/prom-sparse.yaml
    mode: 0666

# helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
# helm show values prometheus-community/kube-prometheus-stack | tee prom-stack.yaml
# https://docs.ansible.com/ansible/latest/collections/kubernetes/core/helm_module.html#ansible-collections-kubernetes-core-helm-module
- name: Add kube-prometheus-stack helm repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts

- name: status of kube-prometheus-stack
  kubernetes.core.helm_info:
    name: prom-stack
    release_namespace: prom
  register: helm_info
- debug:
    msg: "{{ helm_info.status.status }}"
  # need conditional or fallback because uninstalled helm chart does not have nested variable
  when: helm_info.status is defined

# kubectl create ns prom
#helm install --namespace prom -f prom-stack.yaml prom-stack prometheus-community/kube-prometheus-stack
#helm upgrade --namespace prom -f prom-stack.yaml prom-stack prometheus-community/kube-prometheus-stack
#kubectl --namespace prom get pods -l "release=prom-stack"
- name: Deploy kube-prometheus-stack
  kubernetes.core.helm:
    name: prom-stack
    chart_ref: prometheus-community/kube-prometheus-stack
    wait: false
    values: "{{ lookup('template', role_path + '/templates/prom-sparse.yaml') | from_yaml }}"
    release_namespace: prom
    create_namespace: true


#
# Have to apply this after Prometheus is installed, so ServiceMonitor CRD exists !
#
- template:
    src: golang-hello-world-web-servicemonitor.yaml
    dest: .
    mode: 0666
- name: apply ServiceMonitor to hello world service
  kubernetes.core.k8s:
    state: present
    #kubeconfig: "{{KUBECONFIG}}"
    src: golang-hello-world-web-servicemonitor.yaml
