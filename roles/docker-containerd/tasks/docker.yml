---

- name: ensure docker group exists
  group:
    name: "{{item}}"
    state: present
  loop:
    - "{{default_docker_group}}"

- name: Create initial docker user so file ownership can have valid entry
  user:
    name: "{{default_docker_user}}"
    group: "{{default_docker_group}}"
    createhome: no
    shell: /bin/bash
    state: present

# etc/apt/sources.list.d/docker-ppa.list will change because label change in ppa
# it will need to be rewritten by apt to:
# deb http://ppa.launchpad.net/cloud-images/docker1903-k8s/ubuntu bionic main
- name: do apt update to fix issues with docker ppa changing label (apt-get will not fix)
  command:
      cmd: apt update -y
  register: apt_result
  failed_when: not apt_result.rc in [0,1]

- name: remove any older docker packages, using apt to make sure apt-get is not used
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
    update_cache: yes

- name: Install dependent packages
  package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - gnupg-agent
      - software-properties-common
      - members # for group evaluation
    state: present
    #update_cache: yes

- name: LEGACY DOCKER BLOCK
  block:

    - name: is docker key already loaded into keyring
      command: apt-key list --list-signatures
      register: docker_signatures
    
    - name: get docker key, direct internet
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      args:
        warn: no
      when: not '8D81803C0EBFCD88' in docker_signatures.stdout
    
    - name: install fingerprint for docker
      apt_key:
        id: 08D81803C0EBFCD88
        state: present
    
    - name: add docker apt repository to source list
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_lsb.codename|lower}} stable"
        state: present
        filename: docker
        update_cache: yes
        mode: 0644
    
    - name: create Docker config directory
      file:
        path: /etc/docker
        state: directory
    
    - name: changing Docker to systemd driver expected by kubeadm, instead of default cgroupfs driver
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
            {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m"
            },
            "storage-driver": "overlay2"
            }
    
    - name: install docker and containerd packages
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes
      register: docker_installed

    - name: move docker cache directory to {{docker_cache_dir}} if still in default location
      include_tasks: docker-cache-dir.yml
    
    - name: create systemd dir for docker config
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
    
    - name: add insecure registry to docker
      template:
        src: docker.j2
        dest: /etc/default/docker
        
    - name: get all members of custom group
      command: members {{docker_member_group}}
      register: docker_members
      failed_when: not docker_members.rc in [0,1]
    
    - name: add list of users to docker group so that sudo is unecessary
      user:
        name: "{{item}}"
        groups: docker
        append: yes
      with_items: "{{ docker_members.stdout.split() }}"
    
    - name: check cgroup driver, which should be systemd to match expectation of kubeadm
      shell:
        cmd: docker info | grep -i cgroup
      register: docker_cgroup
    - debug: msg="{{docker_cgroup.stdout_lines}}"

  # block
  when: not use_containerd

- name: CONTAINERD BLOCK
  block:

    # The Docker apt repository does conveniently contain the 'containerd.io' package
    # which is one method of installing Containerd on Ubuntu22
    # https://www.itzgeek.com/how-tos/linux/ubuntu-how-tos/install-containerd-on-ubuntu-22-04.html

    # save ASCII-armored gpg key locally
    - name: get key for download.docker.com apt repo
      shell:
        cmd: curl -fsSL curl -fsSL https://download.docker.com/linux/ubuntu/gpg > /usr/share/keyrings/download.docker.com.asc
    - name: chmod of keyring
      command:
        cmd: chmod 0644 /usr/share/keyrings/download.docker.com.asc

    # add custom apt repo with 'signed-by' referring to gpg key
    - name: add download.docker.com apt repository
      apt_repository:
        # 'lsb_release -cs' is ansible_distribution_release
        repo: deb [signed-by=/usr/share/keyrings/download.docker.com.asc] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
        state: present
        filename: download.docker.com
        update_cache: yes
        mode: 0644
        validate_certs: false

    - name: install containerd packages
      package:
        name:
          - containerd.io
        state: present
        update_cache: yes
      register: containerd_installed

    - name: create config dir for containerd
      file:
        path: /etc/containerd
        state: directory
    - name: touch containerd config
      file:
        path: /etc/containerd/config.toml
        state: touch
    
    - name: count how many times plugin is found in containerd config, low count means we need to recreate config
      shell:
        cmd: grep -c plugins /etc/containerd/config.toml
      register: plugins_count
    #- debug: msg="{{plugins_count}}"
    
    - name: create fully formed config.toml for containerd if plugin count is low
      shell:
        cmd: containerd config default > /etc/containerd/config.toml
      when: (plugins_count.stdout|int) < 4
      register: config_toml_res
    
    - name: containerd, set SystemdCgroup to true
      replace:
        path: /etc/containerd/config.toml
        regexp: '(\s*)SystemdCgroup = false'
        replace: '\1SystemdCgroup = true'
      when: config_toml_res is defined and config_toml_res.changed
    - name: containerd, set disabled_plugins to empty array
      replace:
        path: /etc/containerd/config.toml
        regexp: '^disabled_plugins.*'
        replace: 'disabled_plugins = []'
      when: config_toml_res is defined and config_toml_res.changed
    
    - name: Restart containerd service
      systemd:
        name: containerd
        state: restarted
  # block
  when: use_containerd


